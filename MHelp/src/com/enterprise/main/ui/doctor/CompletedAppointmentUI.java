/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.enterprise.main.ui.doctor;

import com.enterprise.main.Business;
import com.enterprise.main.Profiles.DoctorProfile;
import com.enterprise.main.Profiles.PatientProfile;
import com.enterprise.main.appointment.Appointment;
import com.enterprise.main.appointment.AppointmentDirectory;
import java.awt.CardLayout;
import java.util.Properties;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karthikv
 */
public class CompletedAppointmentUI extends javax.swing.JPanel {

    /**
     * Creates new form CompletedAppointmentUI
     */
    JPanel jpanelWorkArea;
    Business business;
    DoctorProfile doctorsProfile;
    Properties properties;
    public CompletedAppointmentUI(JPanel jpanelWorkArea, Business business, DoctorProfile doctorsProfile, Properties properties) {
        initComponents();
          this.properties=properties;
        this.jpanelWorkArea=jpanelWorkArea;
        this.business=business;
        this.doctorsProfile=doctorsProfile;
                populateTable();
    }

private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblPrevioustaAppointment.getModel();
        AppointmentDirectory appointmentDirectory = business.getAppointmentDirectory();
        model.setRowCount(0);
        for (Appointment appointment : appointmentDirectory.getAppointmentList()) {
            if(appointment.getDoctorProfile().getPerson().getId()==doctorsProfile.getPerson().getId()) {
                if(!appointment.getAppointmentStatus().equals("Active")) {
                 Object row[] = new Object[6];
            PatientProfile patientprofile=appointmentDirectory.findPatientbyAppointment(appointment.getAppointmentid());
            row[0]=appointment.getAppointmentid();
            row[1] = patientprofile.getPerson().getFirstName()+ " " +patientprofile.getPerson().getLastName();
            row[2] = patientprofile.getPerson().getUserName();
            row[3] = patientprofile.getPerson().getEmailId();
            row[4] = appointment.getDate();
            row[5]=appointment.getAppointmentStatus();
            ((DefaultTableModel) tblPrevioustaAppointment.getModel()).addRow(row);
            }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrevioustaAppointment = new javax.swing.JTable();
        btnViewPatientInfo = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        tblPrevioustaAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Appointment Id", "Patient Name", "User Id", "Email", "Date of Appointment", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblPrevioustaAppointment);

        btnViewPatientInfo.setText("View Patient Information Information");
        btnViewPatientInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfoActionPerformed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(btnViewPatientInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(67, 67, 67)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102)
                .addComponent(btnViewPatientInfo)
                .addContainerGap(146, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewPatientInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfoActionPerformed
 int row = tblPrevioustaAppointment.getSelectedRow();
        if(row<0) {
                JOptionPane.showMessageDialog(this, "Please select a row to View Appointment Details.", "Error", JOptionPane.ERROR_MESSAGE);
    
            return;
        }
        
        int appointmentId = (int) tblPrevioustaAppointment.getValueAt(row, 0);
        System.out.println(appointmentId);
        Appointment appointment=business.getAppointmentDirectory().findAppointmentbyId(appointmentId);
        System.out.println(appointment.getAppointmentid());
        
        PatientProfile patient=business.getAppointmentDirectory().findPatientbyAppointment(appointmentId);
        PatientDetailsSection patientDetailsSection=new PatientDetailsSection(jpanelWorkArea,business,doctorsProfile,properties,patient);
        jpanelWorkArea.add("PatientDetailsSection", patientDetailsSection);
        CardLayout layout=(CardLayout) jpanelWorkArea.getLayout();
        layout.next(jpanelWorkArea);   
    }//GEN-LAST:event_btnViewPatientInfoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblPrevioustaAppointment.getModel();
    model.setRowCount(0);

    String searchText = jTextField1.getText().toLowerCase(); 

    AppointmentDirectory appointmentDirectory = business.getAppointmentDirectory();

    for (Appointment appointment : appointmentDirectory.getAppointmentList()) {
        if (appointment.getDoctorProfile().getPerson().getId() == doctorsProfile.getPerson().getId()) {
            if (!appointment.getAppointmentStatus().equals("Active")) {
                PatientProfile patientProfile = appointmentDirectory.findPatientbyAppointment(appointment.getAppointmentid());
                String patientFullName = patientProfile.getPerson().getFirstName() + " " + patientProfile.getPerson().getLastName();

                if (patientFullName.toLowerCase().contains(searchText)) {
                    Object row[] = new Object[6];
                    row[0] = appointment.getAppointmentid();
                    row[1] = patientFullName;
                    row[2] = patientProfile.getPerson().getUserName();
                    row[3] = patientProfile.getPerson().getEmailId();
                    row[4] = appointment.getDate();
                    row[5] = appointment.getAppointmentStatus();
                    model.addRow(row);
                }
            }
        }
    }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnViewPatientInfo;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tblPrevioustaAppointment;
    // End of variables declaration//GEN-END:variables
}
