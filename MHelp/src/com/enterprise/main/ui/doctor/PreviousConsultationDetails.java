/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.enterprise.main.ui.doctor;

import com.enterprise.main.Business;
import com.enterprise.main.Profiles.DoctorProfile;
import com.enterprise.main.Profiles.PatientProfile;
import com.enterprise.main.appointment.AppointmentDirectory;
import com.enterprise.main.directory.DoctorDirectory;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import javax.swing.table.DefaultTableModel;
import com.enterprise.main.appointment.Appointment;
import com.enterprise.main.ui.patient.DoctorDetailsPatientDisplay;
import java.awt.CardLayout;
import java.util.Properties;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
/**
 *
 * @author karthikv
 */
public class PreviousConsultationDetails extends javax.swing.JPanel {

    
    /**
     * Creates new form PreviousConsultationDetails
     */
     
    JPanel jpanelWorkArea;
    Business business;
    DoctorProfile doctorsProfile;
    Properties properties;
    public PreviousConsultationDetails(JPanel jpanelWorkArea, Business business, DoctorProfile doctorsProfile, Properties properties) {
        initComponents();
          this.properties=properties;
        this.jpanelWorkArea=jpanelWorkArea;
        this.business=business;
        this.doctorsProfile=doctorsProfile;
                populateTable();
    }

private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblPrevioustaAppointment.getModel();
        AppointmentDirectory appointmentDirectory = business.getAppointmentDirectory();
        model.setRowCount(0);
        for (Appointment appointment : appointmentDirectory.getAppointmentList()) {
            if(appointment.getDoctorProfile().getPerson().getId()==doctorsProfile.getPerson().getId()) {
                if(appointment.getAppointmentStatus().equals("Active")) {
                 Object row[] = new Object[6];
            PatientProfile patientprofile=appointmentDirectory.findPatientbyAppointment(appointment.getAppointmentid());
            row[0]=appointment.getAppointmentid();
            row[1] = patientprofile.getPerson().getFirstName()+ " " +patientprofile.getPerson().getLastName();
            row[2] = patientprofile.getPerson().getUserName();
            row[3] = patientprofile.getPerson().getEmailId();
            row[4] = appointment.getDate();
            row[5]=appointment.getAppointmentStatus();
            ((DefaultTableModel) tblPrevioustaAppointment.getModel()).addRow(row);
            }
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrevioustaAppointment = new javax.swing.JTable();
        btnViewPatientInfo = new javax.swing.JButton();
        btnviewAppointment = new javax.swing.JButton();

        tblPrevioustaAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Appointment Id", "Patient Name", "User Id", "Email", "Date of Appointment", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblPrevioustaAppointment);

        btnViewPatientInfo.setText("View Patient Information Information");
        btnViewPatientInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientInfoActionPerformed(evt);
            }
        });

        btnviewAppointment.setText("View Appointment");
        btnviewAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewAppointmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(btnViewPatientInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(btnviewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102)
                .addComponent(btnViewPatientInfo)
                .addGap(18, 18, 18)
                .addComponent(btnviewAppointment)
                .addContainerGap(54, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewPatientInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientInfoActionPerformed
 int row = tblPrevioustaAppointment.getSelectedRow();
        if(row<0) {
                JOptionPane.showMessageDialog(this, "Please select a row to View Appointment Details.", "Error", JOptionPane.ERROR_MESSAGE);
    
            return;
        }
        
        int appointmentId = (int) tblPrevioustaAppointment.getValueAt(row, 0);
        System.out.println(appointmentId);
        Appointment appointment=business.getAppointmentDirectory().findAppointmentbyId(appointmentId);
        System.out.println(appointment.getAppointmentid());
        
        PatientProfile patient=business.getAppointmentDirectory().findPatientbyAppointment(appointmentId);
        PatientDetailsSection patientDetailsSection=new PatientDetailsSection(jpanelWorkArea,business,doctorsProfile,properties,patient);
        jpanelWorkArea.add("PatientDetailsSection", patientDetailsSection);
        CardLayout layout=(CardLayout) jpanelWorkArea.getLayout();
        layout.next(jpanelWorkArea);       
        
    }//GEN-LAST:event_btnViewPatientInfoActionPerformed

    private void btnviewAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewAppointmentActionPerformed
        int row = tblPrevioustaAppointment.getSelectedRow();
        if(row<0) {
                JOptionPane.showMessageDialog(this, "Please select a row to View Appointment Details.", "Error", JOptionPane.ERROR_MESSAGE);
    
            return;
        }
        
        int appointmentId = (int) tblPrevioustaAppointment.getValueAt(row, 0);
        System.out.println(appointmentId);
        Appointment appointment=business.getAppointmentDirectory().findAppointmentbyId(appointmentId);
        System.out.println(appointment.getAppointmentid());
        
        PatientProfile patient=business.getAppointmentDirectory().findPatientbyAppointment(appointmentId);
           PatientsAppointmentUIDoctor patientsAppointmentUIDoctor=new PatientsAppointmentUIDoctor(jpanelWorkArea,business,doctorsProfile,appointment,patient,properties);
 jpanelWorkArea.add("PatientsAppointmentUIDoctor", patientsAppointmentUIDoctor);
        CardLayout layout=(CardLayout) jpanelWorkArea.getLayout();
        layout.next(jpanelWorkArea);
        
    }//GEN-LAST:event_btnviewAppointmentActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnViewPatientInfo;
    private javax.swing.JButton btnviewAppointment;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPrevioustaAppointment;
    // End of variables declaration//GEN-END:variables
}
