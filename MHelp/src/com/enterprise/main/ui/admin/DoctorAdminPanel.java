/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.enterprise.main.ui.admin;

import com.enterprise.main.Business;
import com.enterprise.main.Profiles.DoctorProfile;
import com.enterprise.main.Profiles.PatientProfile;
import com.enterprise.main.directory.DoctorDirectory;
import com.enterprise.main.directory.PatientDirectory;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karthikv
 */
public class DoctorAdminPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorAdminPanel
     */
    
     JPanel CardSequencePanel;
    Business business;
    Properties properties;
    public DoctorAdminPanel(JPanel CardSequencePanel, Business business, Properties properties) {
        initComponents();
        this.CardSequencePanel=CardSequencePanel;
        this.business=business;
        this.properties=properties;
        
        populate();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatients = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        tblPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "UserId", "Email Id", "Rating"
            }
        ));
        jScrollPane1.setViewportView(tblPatients);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Refresh");

        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jButton5))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addGap(91, 91, 91)
                            .addComponent(jButton3)
                            .addGap(99, 99, 99)
                            .addComponent(jButton4))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(280, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
           int row = tblPatients.getSelectedRow();
        if(row<0) {
                JOptionPane.showMessageDialog(this, "Please select a row to delete.", "Error", JOptionPane.ERROR_MESSAGE);
    
            return;
        }
        
        int id = (int) tblPatients.getValueAt(row, 0);
        DoctorProfile profile=business.getDoctorDirectory().findDoctor(id);
        

        business.getDoctorDirectory().deleteAppointment(profile);
        
        JOptionPane.showMessageDialog(this,"The User Profile has been Deleted");
        populate();
//
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
            String searchKeyword = jTextField1.getText().trim().toLowerCase();

    if (searchKeyword.isEmpty()) {
        populate();
    } else {
        performSearch(searchKeyword);
    }
    }//GEN-LAST:event_jButton5ActionPerformed
    private void populate() {
        
        DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
        DoctorDirectory docdirectory = business.getDoctorDirectory();
        model.setRowCount(0);
        for (DoctorProfile doctor : docdirectory.getDoctorList()) {
                 Object row[] = new Object[5];
            row[0]=doctor.getPerson().getId();
            row[1] = doctor.getPerson().getFirstName()+ " " +doctor.getPerson().getLastName();
            row[2] = doctor.getPerson().getUserName();
            row[3] = doctor.getPerson().getEmailId();
            row[4] = doctor.getRating();
            ((DefaultTableModel) tblPatients.getModel()).addRow(row);
            
            
        }
    }
  private void performSearch(String searchKeyword) {
    DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
    DoctorDirectory doctorDirectory = business.getDoctorDirectory();
    model.setRowCount(0);

    for (DoctorProfile doctorProfile : doctorDirectory.getDoctorList()) {
        String name = (doctorProfile.getPerson().getFirstName() + " " + doctorProfile.getPerson().getLastName()).toLowerCase();

        if (name.contains(searchKeyword)) {
            Object row[] = new Object[5];
            row[0] = doctorProfile.getPerson().getId();
            row[1] = doctorProfile.getPerson().getFirstName() + " " + doctorProfile.getPerson().getLastName();
            row[2] = doctorProfile.getPerson().getUserName();
            row[3] = doctorProfile.getPerson().getEmailId();
            row[4] = doctorProfile.getRating();
            ((DefaultTableModel) tblPatients.getModel()).addRow(row);
        }
    }
}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tblPatients;
    // End of variables declaration//GEN-END:variables
}
