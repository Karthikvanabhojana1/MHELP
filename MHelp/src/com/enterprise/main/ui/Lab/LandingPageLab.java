/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.enterprise.main.ui.Lab;

import com.enterprise.main.Business;
import com.enterprise.main.HomePageLanding;
import com.enterprise.main.Profiles.UserLabProfile;
import com.enterprise.main.appointment.lab.LabAppointment;
import com.enterprise.main.appointment.lab.LabAppointmentList;
import com.enterprise.main.directory.UserLabDirectory;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shreyas
 */
public class LandingPageLab extends javax.swing.JPanel {

    /**
     * Creates new form LandingPageLab
     */
    
    JPanel CardSequencePanel;
    Business business;
    UserLabProfile userLabProfile;
    Properties properties;
    public LandingPageLab(JPanel CardSequencePanel, Business business, UserLabProfile userLabProfile, Properties properties) {
        initComponents();
        this.properties=properties;
        this.CardSequencePanel=CardSequencePanel;
        this.business=business;
        this.userLabProfile=userLabProfile; 
        populatetableAvailable();
        populatetableAvailable1();
    }

  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblActive = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPending = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnRefresh1 = new javax.swing.JButton();

        tblActive.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Name", "Patient userName", "Appointment Id", "Doctors Name"
            }
        ));
        jScrollPane1.setViewportView(tblActive);

        jLabel1.setText("Completed Appointments");

        tblPending.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Name", "Patient Username", "Appointment Id", "Status"
            }
        ));
        jScrollPane2.setViewportView(tblPending);

        jLabel2.setText("Active Appointments");

        jButton1.setText("View Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnRefresh1.setText("Logout");
        btnRefresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefresh1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 86, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnRefresh)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2)))
                        .addGap(91, 91, 91))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh1)
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(btnRefresh1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(btnRefresh))
                .addGap(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          int row = tblActive.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(this, "Please select a row.", "Error", JOptionPane.ERROR_MESSAGE);

            return;
        }
         int appointmentId = (int) tblActive.getValueAt(row, 2);
         LabAppointment labappointment=business.getLabAppointment().findAppointmentId(appointmentId);
                
                 LabReport landingPageLab = new LabReport(CardSequencePanel, business, userLabProfile,properties, labappointment);
            CardSequencePanel.removeAll();
            CardSequencePanel.add("Lab", landingPageLab);
            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:\
        
         int row = tblPending.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(this, "Please select a row.", "Error", JOptionPane.ERROR_MESSAGE);

            return;
        }
         int appointmentId = (int) tblPending.getValueAt(row, 2);
         LabAppointment labappointment=business.getLabAppointment().findAppointmentId(appointmentId);
                
                 LabReportCompleted landingPageLab = new LabReportCompleted(CardSequencePanel, business, userLabProfile,properties, labappointment);
            CardSequencePanel.removeAll();
            CardSequencePanel.add("Lab", landingPageLab);
            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnRefresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefresh1ActionPerformed
        // TODO add your handling code here:
        
                 HomePageLanding landingPageLab = new HomePageLanding( business);
            CardSequencePanel.removeAll();
            CardSequencePanel.add("Lab", landingPageLab);
    }//GEN-LAST:event_btnRefresh1ActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populatetableAvailable();
        populatetableAvailable1();
        
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRefresh1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblActive;
    private javax.swing.JTable tblPending;
    // End of variables declaration//GEN-END:variables

    private void populatetableAvailable() {
        
           DefaultTableModel model = (DefaultTableModel) tblActive.getModel();
        LabAppointmentList labAppointlist = business.getLabAppointment();
        model.setRowCount(0);
        
        for (LabAppointment appointment : labAppointlist.getLabAppointmentList()) {
            
            if(appointment.getAppointmentStatus().equals("Active")) {
                     Object row[] = new Object[4];
            row[0]= appointment.getPatientProfile().getPerson().getFirstName();
            row[1] =appointment.getPatientProfile().getPerson().getUserName();
            row[2] = appointment.getAppointmentid();
            row[3] =appointment.getDoctorProfile().getPerson().getFirstName();
           
            ((DefaultTableModel) tblActive.getModel()).addRow(row);
            }
            
            
            
    }
    }

    private void populatetableAvailable1() {
   DefaultTableModel model = (DefaultTableModel) tblPending.getModel();
        LabAppointmentList labAppointlist = business.getLabAppointment();
        model.setRowCount(0);
        
        
        
        for (LabAppointment appointment : labAppointlist.getLabAppointmentList()) {
            
            if(appointment.getAppointmentStatus().equals("Completed")) {
                     Object row[] = new Object[4];
            row[0]= appointment.getPatientProfile().getPerson().getFirstName();
            row[1] =appointment.getPatientProfile().getPerson().getUserName();
            row[2] = appointment.getAppointmentid();
            row[3] =appointment.getDoctorProfile().getPerson().getFirstName();
           
            ((DefaultTableModel) tblPending.getModel()).addRow(row);
            }
                }
    }
}
