/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.enterprise.main;

import com.enterprise.main.Profiles.AdminProfile;
import com.enterprise.main.Profiles.DoctorProfile;
import com.enterprise.main.Profiles.PatientProfile;
import com.enterprise.main.Profiles.Profile;
import com.enterprise.main.ui.CreateAccount.CreateAccount;
import com.enterprise.main.ui.patient.LandingPagePatient;
import java.sql.Connection;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.DriverManager;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.enterprise.main.usermanagement.UserAccountDirectory;
import com.enterprise.main.usermanagement.UserAccount;
import com.enterprise.main.Profiles.DoctorProfile;
import com.enterprise.main.Profiles.LabProfile;
import com.enterprise.main.ui.doctor.LandingPageDoctor;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.Properties;
import com.enterprise.main.Profiles.PharmacyProfile;
import com.enterprise.main.Profiles.UserLabProfile;
import com.enterprise.main.directory.PharmacyDirectory;
import com.enterprise.main.ui.CreateAccount.AccountCreationProfileLayer1;
import com.enterprise.main.ui.pharmacy.LandingPagePharma;
import com.enterprise.main.ui.CreateAccount.CreatePharmaCoAccount;
import com.enterprise.main.ui.Lab.LandingPageLab;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.JOptionPane;
import com.enterprise.main.ui.admin.AdminPanel;
import javax.swing.JOptionPane;

/**
 *
 * @author karthikv
 */
public class HomePage extends javax.swing.JFrame {

    Business business;
    PharmacyProfile pharmacyProfile;

    /**
     * Creates new form HomePage
     */
    Properties properties;

    public HomePage() throws Exception {
        initComponents();
        business = ConfigureABusiness.initialize();
        properties = new Properties();
        // pharmacyProfile = new PharmacyProfile(String companyName, String
        // companyAddress, String email, String password);

        InputStream is = new FileInputStream("dataConfig.properties");
        properties.load(is);

    }

    private String hashPasswordMD5(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] messageDigest = md.digest(password.getBytes());
            BigInteger no = new BigInteger(1, messageDigest);
            String hashText = no.toString(16);

            while (hashText.length() < 32) {
                hashText = "0" + hashText;
            }

            return hashText;
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            return null;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jsplitPane = new javax.swing.JSplitPane();
        actionWorkAreaPanel = new javax.swing.JPanel();
        btnLogin = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnCreateNew = new javax.swing.JButton();
        CardSequencePanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        jLabel3.setText("Password");

        jLabel1.setText("UserName");

        btnCreateNew.setText("Create Account");
        btnCreateNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout actionWorkAreaPanelLayout = new javax.swing.GroupLayout(actionWorkAreaPanel);
        actionWorkAreaPanel.setLayout(actionWorkAreaPanelLayout);
        actionWorkAreaPanelLayout.setHorizontalGroup(
            actionWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionWorkAreaPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(actionWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(txtUserName, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateNew, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        actionWorkAreaPanelLayout.setVerticalGroup(
            actionWorkAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionWorkAreaPanelLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jLabel1)
                .addGap(13, 13, 13)
                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addGap(3, 3, 3)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(btnLogin)
                .addGap(18, 18, 18)
                .addComponent(btnCreateNew)
                .addContainerGap())
        );

        jsplitPane.setLeftComponent(actionWorkAreaPanel);

        CardSequencePanel.setLayout(new java.awt.CardLayout());
        jsplitPane.setRightComponent(CardSequencePanel);

        getContentPane().add(jsplitPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String userName = txtUserName.getText();
        String password = txtPassword.getText();
        UserAccountDirectory uad = business.getUserAccountDirectory();
        UserAccount useraccount = uad.AuthenticateUser(userName, password);
if(userName.equals("Admin") && password.equals("Admin")) {
      AdminPanel adminworkarea = new AdminPanel(CardSequencePanel, business, properties);
            CardSequencePanel.removeAll();
            CardSequencePanel.add("Admin", adminworkarea);
            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
} 
        
        else if (useraccount == null) {
                        JOptionPane.showMessageDialog(this, "Account Credentials are Wrong");

            return;
        }

        String r = useraccount.getRole();
        Profile profile = useraccount.getAssociatedPersonProfile();
 if (profile instanceof PatientProfile) {
            PatientProfile patientprofile = (PatientProfile) profile;
            LandingPagePatient landingPagePatient;

            landingPagePatient = new LandingPagePatient(CardSequencePanel, business, patientprofile, properties);
            CardSequencePanel.removeAll();
            CardSequencePanel.add("patientLandingPage", landingPagePatient);
            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);

        } else if (profile instanceof DoctorProfile) {
            System.out.println("DoctorsProfile");
            DoctorProfile doctorProfile = (DoctorProfile) profile;

            LandingPageDoctor landingPageDoctor = new LandingPageDoctor(CardSequencePanel, business, doctorProfile,
                    properties);
            CardSequencePanel.removeAll();
            CardSequencePanel.add("Sales", landingPageDoctor);
            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);

        } else if (profile instanceof PharmacyProfile) {

            System.out.println("PharmacyProfile");
            LandingPagePharma landingPagePharma = new LandingPagePharma(CardSequencePanel, business, pharmacyProfile,
                    properties);
            CardSequencePanel.removeAll();
            CardSequencePanel.add("Pharmacy", landingPagePharma);
            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
        } else if (profile instanceof UserLabProfile) {
            System.out.println("LabProfile");
            
                        UserLabProfile userLabProfile = (UserLabProfile) profile;

            
            LandingPageLab landingPageLab = new LandingPageLab(CardSequencePanel, business, userLabProfile,
                    properties);
            CardSequencePanel.removeAll();
            CardSequencePanel.add("Lab", landingPageLab);
            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
        }
        
//        else if (profile instanceof AdminPanel) {
//             AdminPanel adminworkarea = new AdminPanel(CardSequencePanel, business, properties);
//            CardSequencePanel.removeAll();
//            CardSequencePanel.add("Admin", adminworkarea);
//            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
//
//        }

        
        
//        else if (profile instanceof AdminProfile) {
//
//            
//             AdminPanel ammm = new AdminPanel(CardSequencePanel, business, properties);
//            CardSequencePanel.removeAll();
//            CardSequencePanel.add("AdminPanel", ammm);
//            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
//            
//            
//        }
        
        else{
            JOptionPane.showMessageDialog(this, "Please enter correct username and Password");
        }

    }// GEN-LAST:event_btnLoginActionPerformed

    private void btnCreateNewActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCreateNewActionPerformed
        // TODO add your handling code here:
        AccountCreationProfileLayer1 accountCreateLayer = new AccountCreationProfileLayer1(business, CardSequencePanel,
                properties);
        CardSequencePanel.removeAll();
        CardSequencePanel.add("AccountCreateLayer", accountCreateLayer);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);

    }// GEN-LAST:event_btnCreateNewActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
 AdminPanel adminworkarea = new AdminPanel(CardSequencePanel, business, properties);
            CardSequencePanel.removeAll();
            CardSequencePanel.add("Admin", adminworkarea);
            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        String url = "jdbc:mysql://localhost:3306/mydoctor";
        String userName = "root";
        String pass = "Shreyas2!";
        //
        // try {
        // Class.forName("com.mysql.cj.jdbc.Driver");
        // Connection connection = DriverManager.getConnection(url,userName,pass);
        //
        // Statement statement = connection.createStatement();
        // ResultSet resultSet = statement.executeQuery("select * from Person");
        // while (resultSet.next()) {
        // int id = resultSet.getInt("id");
        // String firstName = resultSet.getString("firstName");
        // String lastName = resultSet.getString("lastName");
        // String email = resultSet.getString("emailId");
        //
        // System.out.println(resultSet.getInt(1) + " " + resultSet.getString(2) + " " +
        // resultSet.getString(3));
        // ;
        // System.out.println("ID: " + id + ", Name: " + firstName+"Last Name"
        // +lastName+ "email "+email);
        //
        // }
        // connection.close();
        // } catch (Exception ex) {
        // Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        // }
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new HomePage().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CardSequencePanel;
    private javax.swing.JPanel actionWorkAreaPanel;
    private javax.swing.JButton btnCreateNew;
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSplitPane jsplitPane;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
